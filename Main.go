/*

Добро пожаловать! Это учебная программа для выполнения простых математических операций и для тренировки в выполнения простых функций:
- ввод и вывод текста,
- цикл,
- выбор,
- защита от ввода некорректных данных (в части выбора математической операции),
- прерывание программы.
В программе не реализован следующий функционал, который мог бы быть реализован:
- защита от ввода некорректных данных (в части параметров num1 и num2)
- вынесение некоторых операций в функции (для упрощения общего вида программы).
Часть реализованных функций, например - defer, исключена из программы, т.к. при запуске скомпилированной программы их не будет видно, либо они будут избыточны.
С уважением, разработчик PATihomirov
https://github.com/patihomirov
*/

package main

import (
	"fmt"
	"time"
)

func main() {
	var num1, num2 int //две переменные для математических операций
	var select1 int    //переменная выбора математической операции
	fmt.Println("Учебная программа Калькулятор")

	for { //зацикливаем программу, так обычно нельзя без использования защиты от бесконечного цикла, но для учебных целей сделаем так. Выход из программы по Break в конце
		//Здесь можно было добавить паузу и очистку терминала, но уже не стал делать
		//запрашиваем данные для расчета
		fmt.Println("Введите первое целое число")
		fmt.Scan(&num1) //здесь не хватает контроля корректности ввода, но уже не стал добавлять
		//fmt.Println("Вы ввели ", num1) //решил убрать чтобы не засорять вывод

		fmt.Println("Введите второе целое число")
		fmt.Scan(&num2) //здесь не хватает контроля корректности ввода, но уже не стал добавлять
		//fmt.Println("Вы ввели ", num2) //решил убрать чтобы не засорять вывод

		fmt.Println(`Выберите нужную операцию:
1. Сложение
2. Вычитание
3. Умножение
4. Деление
5. Остаток`)
		fmt.Scan(&select1)
		//fmt.Println("Вы ввели ", select1) //решил убрать чтобы не засорять вывод

		//Выводим результаты расчета
		switch select1 {
		case 1:
			fmt.Println(num1, " + ", num2, " = ", num1+num2)
		case 2:
			fmt.Println(num1, " - ", num2, " = ", num1-num2)
		case 3:
			fmt.Println(num1, " * ", num2, " = ", num1*num2)
		case 4:
			fmt.Println(num1, " / ", num2, " = ", num1/num2)
		case 5:
			fmt.Println(num1, " % ", num2, " = ", num1%num2)
		case 987:
			fmt.Println(`Добро пожаловать в пасхалку! 
Это учебная программа для выполнения простых математических операций и для тренировки в выполнения простых функций:
- ввод и вывод текста,
- цикл,
- выбор,
- защита от ввода некорректных данных (в части выбора математической операции),
- прерывание программы.
В программе не реализован следующий функционал, который мог бы быть реализован:
- защита от ввода некорректных данных (в части параметров num1 и num2)
- вынесение некоторых операций в функции (для упрощения общего вида программы).
Часть реализованных функций, например - defer, исключена из программы, т.к. при запуске скомпилированной программы их не будет видно, либо они будут избыточны.
С уважением, разработчик PATihomirov 
https://github.com/patihomirov`)

		default:
			fmt.Println(select1, " - не подходящее значение, программа закрывается") //здесь можно было добавить возврат на выбор операции, но уже не стал делать
			time.Sleep(2 * time.Second)                                              //Задержка для прощальной фразы перед закрытием консоли программы
			return
		}

		//Предлагаем выход из программы
		var select2 int //Объявляем переменную выбора выйти из программы или остаться, но могли использовать повторно select1
		fmt.Println(`Желаете ли повторить расчет с новыми данными?
	1. Повторить расчет
	2. Выйти из программы`)
		fmt.Scan(&select2)
		switch select2 {
		case 1:
			//fmt.Println(`Вы выбрали "1. Повторить расчет"`) //решил убрать чтобы не засорять вывод
			fmt.Println(`Повторим расчет`)
		default: //Для удобства пользователя выходим из программы при любом значении отличном от "1"
			fmt.Println("До свидания!")
			time.Sleep(2 * time.Second) //Задержка для прощальной фразы перед закрытием консоли программы
			return
		}
	}
}
